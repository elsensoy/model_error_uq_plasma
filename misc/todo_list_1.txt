mcmc-results-8(so far):

ISSUE:
The simulation setup for mcmc metrics.

config_spt_100 = config_multilogbohm.copy()
config_spt_100['anom_model'] = 'TwoZoneBohm'

   # Copy and update configuration
    config_copy = config.copy()
    config_copy["anom_model_coeffs"] = [v1, v2]//in the wrapper function but 
    Config_multilogbohm in mcmc_inference instead of config_spt_100.. 
    This is a significant error and affects iteration_metrics results. (resolved.)  

ISSUE:
Optimized initial guess parameters are invalid! 
{
    "v1": 2.0124301397620146,
    "v2": 2.0028894367014445
} v2 < v1.
-no validation checks implemented for MAP. Prior requirements 
wasn't taken into account during optimization--possibly deviated from an ideal result.
-The initial guess is always rejected in mcmc. Acceptance rate is affected.

ISSUE:
Debugging needed for samplers.py:
/mnt/c/Users/MRover/elsensoy/model_error_uq_plasma/MCMCIterators/samplers.py:279: RuntimeWarning: divide by zero encountered in log
  np.log(1 - min(1, np.exp(accept_reject)))
  
OBSERVATION 
-the results show some variance compared to the earlier results with larger initial_cov.
-samples remained constant in mid section for about 50 iterations, then a slightly fluctuates. Nothing promising.
but occuring change after the constant period means sampling doesn't necessarily stop prematurely. Sampling continues if conditions are met.
-reasons for the poor sampling --what leads to constant sections for long durations? 

OBSERVATION
-acceptance rate is 0.085 with covariance scaled down to initial_cov = np.array([[0.15, 0], [0, 0.015]])
- compare to covariance set to np.array([[0.2, 0], [0, 0.02]]), for which acceptance rate was 0.11. 
But the sampled parameters for second half of the process showed no variance (0.2,0.02).

TODO:
(also refer to delta plots)
-ion velocity iteration plot needs revision on legend.(!)

TODO:
run with different covariances. possibly track the simulation failures? does all the failures get penalized,
even the ones produced from jl wrapper? idk.
Compare iteration 1000 vs 200 for different setups the same logic.(worth trying)

TODO:
Loaded observed data and initial from json.(resolved: load_paths created.)
