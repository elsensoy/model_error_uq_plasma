a) Test the Priors
Run the MCMC without the likelihood (sampling from the prior only). This helps verify:

If the priors are implemented correctly.
Whether the bounds and penalty are functioning as expected. 
b) turn off the validation and penalty for prior/posterior. keep simulation penalty only. track the chain behavior. Check log scale consistency.
c)gelman_rubin:
Diagnostic metric used to assess the convergence of MCMC chains. It compares the variance within each chain to the variance between multiple chains. 
If the chains are well-mixed and converged, R^ will approach 1.might be helpful to see what's going on.

12/27
d) run with no prior check (---the issue isn't prior function. could be posterior?)
e) replace log prior function for testing with Gaussian log-prior

def prior_logpdf(v1_log, alpha_log):
    prior1 = norm.logpdf(v1_log, loc=np.log10(1/160), scale=np.sqrt(2))
    prior2 = norm.logpdf(alpha_log, loc=np.log10(1/16), scale=np.sqrt(2))
    return prior1 + prior2
f) plotting.. plotting for map ion velocity value evaluation, meaning i need to add simulation to the driver code for each iteration -_-
g) should i hit N number of iteration mark for metric extraction despite the simulation errors?
h) add burn in period?